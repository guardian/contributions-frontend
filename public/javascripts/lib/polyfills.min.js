/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.
 *
 * - DOMTokenList, License: CC0  (required by "Element.prototype.classList")
 * - Element.prototype.classList, License: CC0  */
 !function(t,n,r){function i(t){if(/^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/.test(t))return String(t);throw new Error("InvalidCharacterError: DOM Exception 5")}function o(t){for(var n,r=-1,i={};n=t[++r];)i[n]=!0;return i}function e(t,n){var i,o=[];for(i in n)n[i]&&o.push(i);r.apply(t,[0,t.length].concat(o))}t.DOMTokenList=function(){},t.DOMTokenList.prototype={constructor:DOMTokenList,item:function(t){return this[parseFloat(t)]||null},length:Array.prototype.length,toString:function(){return n.call(this," ")},add:function(){for(var t,n=o(this),r=0;r in arguments;++r)t=i(arguments[r]),n[t]=!0;e(this,n)},contains:function(t){return t in o(this)},remove:function(){for(var t,n=o(this),r=0;r in arguments;++r)t=i(arguments[r]),n[t]=!1;e(this,n)},toggle:function(t){var n=o(this),r=1 in arguments?!arguments[1]:i(t)in n;return n[t]=!r,e(this,n),!r}}}(this,Array.prototype.join,Array.prototype.splice);!function(t,n){Object.defineProperty(Element.prototype,"classList",{get:function(){function e(){n.apply(r,[0,r.length].concat((p.className||"").replace(/^\s+|\s+$/g,"").split(/\s+/)))}function o(){p.attachEvent&&p.detachEvent("onpropertychange",e),p.className=c.toString.call(r),p.attachEvent&&p.attachEvent("onpropertychange",e)}var r,p=this,a=t.DOMTokenList,c=a.prototype,i=function(){};return i.prototype=new a,i.prototype.item=function(){return e(),c.item.apply(r,arguments)},i.prototype.toString=function(){return e(),c.toString.apply(r,arguments)},i.prototype.add=function(){return e(),c.add.apply(r,arguments),o()},i.prototype.contains=function(){return e(),c.contains.apply(r,arguments)},i.prototype.remove=function(){return e(),c.remove.apply(r,arguments),o()},i.prototype.toggle=function(t){return e(),t=c.toggle.apply(r,arguments),o(),t},r=new i,p.attachEvent&&p.attachEvent("onpropertychange",e),r}})}(this,Array.prototype.splice);
